/*
 * Managed Service API
 * Managed Service API
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openshift.cloud.api;

import com.openshift.cloud.ApiException;
import com.openshift.cloud.api.models.CloudProviderList;
import com.openshift.cloud.api.models.CloudRegionList;
import com.openshift.cloud.api.models.Error;
import com.openshift.cloud.api.models.KafkaRequest;
import com.openshift.cloud.api.models.KafkaRequestList;
import com.openshift.cloud.api.models.KafkaRequestPayload;
import com.openshift.cloud.api.models.ServiceAccount;
import com.openshift.cloud.api.models.ServiceAccountList;
import com.openshift.cloud.api.models.ServiceAccountRequest;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Create a new kafka Request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createKafkaTest() throws ApiException {
        //
        //Boolean async = null;
        //
        //KafkaRequestPayload kafkaRequestPayload = null;
        //
        //KafkaRequest response = api.createKafka(async, kafkaRequestPayload);

        // TODO: test validations
    }
    /**
     * Create a service account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createServiceAccountTest() throws ApiException {
        //
        //ServiceAccountRequest serviceAccountRequest = null;
        //
        //ServiceAccount response = api.createServiceAccount(serviceAccountRequest);

        // TODO: test validations
    }
    /**
     * Delete a kafka request by id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteKafkaByIdTest() throws ApiException {
        //
        //String id = null;
        //
        //Error response = api.deleteKafkaById(id);

        // TODO: test validations
    }
    /**
     * Delete service account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteServiceAccountTest() throws ApiException {
        //
        //String id = null;
        //
        //Error response = api.deleteServiceAccount(id);

        // TODO: test validations
    }
    /**
     * Get a kafka request by id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getKafkaByIdTest() throws ApiException {
        //
        //String id = null;
        //
        //KafkaRequest response = api.getKafkaById(id);

        // TODO: test validations
    }
    /**
     * Retrieves the list of supported regions of the supported cloud provider.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCloudProviderRegionsTest() throws ApiException {
        //
        //String id = null;
        //
        //String page = null;
        //
        //String size = null;
        //
        //CloudRegionList response = api.listCloudProviderRegions(id, page, size);

        // TODO: test validations
    }
    /**
     * Retrieves the list of supported cloud providers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCloudProvidersTest() throws ApiException {
        //
        //String page = null;
        //
        //String size = null;
        //
        //CloudProviderList response = api.listCloudProviders(page, size);

        // TODO: test validations
    }
    /**
     * Returns a list of Kafka requests
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listKafkasTest() throws ApiException {
        //
        //String page = null;
        //
        //String size = null;
        //
        //KafkaRequestList response = api.listKafkas(page, size);

        // TODO: test validations
    }
    /**
     * List service accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listServiceAccountsTest() throws ApiException {
        //
        //ServiceAccountList response = api.listServiceAccounts();

        // TODO: test validations
    }
    /**
     * reset credentials for the service account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetServiceAccountCredsTest() throws ApiException {
        //
        //String id = null;
        //
        //ServiceAccount response = api.resetServiceAccountCreds(id);

        // TODO: test validations
    }
}
